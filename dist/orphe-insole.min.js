var orphe_js_version_date="\nLast modified: 2025/08/22 13:22:56\n";function loadScript(t){const e=document.createElement("script");e.src=t,e.type="text/javascript",e.crossOrigin="anonymous",document.head.appendChild(e)}loadScript("https://cdn.jsdelivr.net/gh/Orphe-OSS/ORPHE-CORE.js@main/js/float16.min.js"),loadScript("https://cdn.jsdelivr.net/gh/Orphe-OSS/ORPHE-CORE.js@main/js/quaternion.js");class FixedSizeArray{constructor(t){this.size=t,this.array=[]}setSize(t){this.size=t}push(t){this.array.length>=this.size&&this.array.shift(),this.array.push(t)}getArray(){return this.array}}class OrpheTimestamp{constructor(){this.start=0}millis(){const t=performance.now();let e=t-this.start;return this.start=t,e}getHz(){let t=this.millis();return t<=15?-1:1e3/t}}class Orphe{constructor(t=0){this.defaultGotData=this.gotData,this.timestamp=new OrpheTimestamp,Object.defineProperty(this,"ORPHE_INFORMATION",{value:"01a9d6b5-ff6e-444a-b266-0be75e85c064",writable:!0}),Object.defineProperty(this,"ORPHE_DEVICE_INFORMATION",{value:"24354f22-1c46-430e-a4ab-a1eeabbcdfc0",writable:!0}),Object.defineProperty(this,"ORPHE_DATE_TIME",{value:"f53eeeb1-b2e8-492a-9673-10e0f1c29026",writable:!0}),Object.defineProperty(this,"ORPHE_OTHER_SERVICE",{value:"db1b7aca-cda5-4453-a49b-33a53d3f0833",writable:!1}),Object.defineProperty(this,"ORPHE_SENSOR_VALUES",{value:"f3f9c7ce-46ee-4205-89ac-abe64e626c0f",writable:!1}),Object.defineProperty(this,"ORPHE_STEP_ANALYSIS",{value:"4eb776dc-cf99-4af7-b2d3-ad0f791a79dd",writable:!1}),this.bluetoothDevice=null,this.dataCharacteristic=null,this.dataChangedEventHandlerMap={},this.hashUUID={},this.hashUUID_lastConnected,this.id=t,this.array_device_information=new DataView(new ArrayBuffer(20)),this.device_information="",this.gait={type:0,direction:0,calorie:0,distance:0,steps:0,standing_phase_duration:0,swing_phase_duration:0},this.stride={foot_angle:0,x:0,y:0,z:0,steps:0},this.pronation={landing_impact:0,x:0,y:0,z:0,steps:0},this.steps_number=0,this.quat={w:0,x:0,y:0,z:0},this.delta={x:0,y:0,z:0},this.euler={pitch:0,roll:0,yaw:0},this.gyro={x:0,y:0,z:0},this.acc={x:0,y:0,z:0},this.converted_gyro={x:0,y:0,z:0},this.converted_acc={x:0,y:0,z:0},this.interpolation={enabled:!1,max_consecutive_missing:1},this.history_sensor_values={acc:new FixedSizeArray(4),gyro:new FixedSizeArray(4),quat:new FixedSizeArray(4),press:new FixedSizeArray(4),converted_acc:new FixedSizeArray(4),converted_gyro:new FixedSizeArray(4)},this.half_round_trip_time=0}isGotDataOverridden(){return this.gotData!==this.defaultGotData}setUUID(t,e,i){this.hashUUID[t]={serviceUUID:e,characteristicUUID:i}}setup(t=["DEVICE_INFORMATION","DATE_TIME","SENSOR_VALUES"],e={interpolation:{enabled:!1,max_consecutive_missing:1}}){this.interpolation=e.interpolation,this.history_sensor_values.acc.setSize(this.interpolation.max_consecutive_missing),this.history_sensor_values.gyro.setSize(this.interpolation.max_consecutive_missing),this.history_sensor_values.quat.setSize(this.interpolation.max_consecutive_missing),this.history_sensor_values.converted_acc.setSize(this.interpolation.max_consecutive_missing),this.history_sensor_values.converted_gyro.setSize(this.interpolation.max_consecutive_missing);for(const e of t)"DEVICE_INFORMATION"==e?this.setUUID(e,this.ORPHE_INFORMATION,this.ORPHE_DEVICE_INFORMATION):"DATE_TIME"==e?this.setUUID(e,this.ORPHE_INFORMATION,this.ORPHE_DATE_TIME):"SENSOR_VALUES"==e&&this.setUUID(e,this.ORPHE_OTHER_SERVICE,this.ORPHE_SENSOR_VALUES)}async begin(t="SENSOR_VALUES"){return this.notification_type=t,await this.setDataStreamingMode(4),await this.syncCoreTime(),this.startNotify("SENSOR_VALUES").then(()=>"done begin(); SENSOR VALUES").catch(t=>{this.onError(t)})}stop(){this.reset()}resetAnalysisLogs(){const t=new Uint8Array([4]);this.write("DEVICE_INFORMATION",t)}scan(t,e={}){return(this.bluetoothDevice?Promise.resolve():this.requestDevice(t)).catch(t=>{this.onError(t)})}requestDevice(t){let e={filters:[{services:["01a9d6b5-ff6e-444a-b266-0be75e85c064","db1b7aca-cda5-4453-a49b-33a53d3f0833"]},{namePrefix:["INS"]}],optionalServices:[this.hashUUID[t].serviceUUID],optionalManufacturerData:[0]};return navigator.bluetooth.requestDevice(e).then(t=>{this.bluetoothDevice=t,this.bluetoothDevice.addEventListener("gattserverdisconnected",this.onDisconnect),this.autoStartWatchingAdvertisements(),Promise.resolve().then(()=>{this.onScan(this.bluetoothDevice.name)})}).catch(t=>{console.warn("Failed requestDevice:",t)})}autoStartWatchingAdvertisements(){this.bluetoothDevice&&(navigator.bluetooth&&BluetoothDevice.prototype.watchAdvertisements?this.bluetoothDevice.watchAdvertisements?this.startWatchingAdvertisements():console.warn("watchAdvertisements is not supported on this device/browser"):console.log("Advertisement monitoring not available - Chrome experimental features may be disabled"))}startWatchingAdvertisements(){this.bluetoothDevice?this.bluetoothDevice.watchAdvertisements?(this.bluetoothDevice.addEventListener("advertisementreceived",t=>{this.onAdvertisementReceived(t)}),this.bluetoothDevice.watchAdvertisements().then(()=>{console.log("Started watching advertisements for",this.bluetoothDevice.name)}).catch(t=>{console.error("Error starting advertisement watch:",t)})):console.warn("watchAdvertisements is not supported on this device/browser"):console.error("Bluetooth device not available")}onAdvertisementReceived(t){console.log("=== Advertisement Received ==="),console.log("Device Name:",t.device.name),console.log("RSSI:",t.rssi,"dBm"),console.log("TX Power:",t.txPower),console.log("=============================="),console.log(t);const e=t.manufacturerData.get(0);if(this.gotStatus){const i={name:t.device.name,rssi:t.rssi,txPower:t.txPower,id:t.device.id,battery:e.getUint8(14),model_type:e.getUint8(5),mounting_position:e.getUint8(6),human_activity_recognition:e.getUint8(7),version:`${e.getUint8(15)}.${e.getUint8(16)}.${e.getUint8(17)}`};this.gotStatus(i)}}stopWatchingAdvertisements(){this.bluetoothDevice&&(this.bluetoothDevice.removeEventListener("advertisementreceived",this.onAdvertisementReceived),console.log("Stopped watching advertisements"))}connectGATT(t){if(this.bluetoothDevice)return this.bluetoothDevice.gatt.connected&&this.dataCharacteristic&&this.hashUUID_lastConnected==t?Promise.resolve():(this.hashUUID_lastConnected=t,this.bluetoothDevice.gatt.connect().then(e=>e.getPrimaryService(this.hashUUID[t].serviceUUID)).then(e=>e.getCharacteristic(this.hashUUID[t].characteristicUUID)).then(e=>{this.dataCharacteristic=e,this.onConnectGATT(t),this.onConnect(t),this.autoStartWatchingAdvertisements()}).catch(t=>{this.onError(t)}));this.onError("No Bluetooth Device")}dataChanged(t,e){return function(i){t.onRead(i.target.value,e)}}read(t){return this.scan(t).then(()=>this.connectGATT(t)).then(()=>this.dataCharacteristic.readValue()).catch(t=>{this.onError(t)})}write(t,e){return this.scan(t).then(()=>this.connectGATT(t)).then(()=>{const t=Uint8Array.from(e);return this.dataCharacteristic.writeValue(t)}).then(()=>{this.onWrite(t)}).catch(t=>{this.onError(t)})}startNotify(t){return this.scan(t).then(()=>this.connectGATT(t)).then(()=>this.dataCharacteristic.startNotifications()).then(()=>{this.dataChangedEventHandlerMap[t]=this.dataChanged(this,t),this.dataCharacteristic.addEventListener("characteristicvaluechanged",this.dataChangedEventHandlerMap[t]),this.onStartNotify(t)}).catch(t=>{console.error("startNotify: Error : "+t),this.onError(t)})}stopNotify(t){return this.scan(t).then(()=>this.connectGATT(t)).then(()=>this.dataCharacteristic.stopNotifications()).then(()=>{this.dataChangedEventHandlerMap[t]&&(this.dataCharacteristic.removeEventListener("characteristicvaluechanged",this.dataChangedEventHandlerMap[t]),delete this.dataChangedEventHandlerMap[t]),this.onStopNotify(t)}).catch(t=>{this.onError(t)})}isConnected(){return!!this.bluetoothDevice&&this.bluetoothDevice.gatt.connected}disconnect(){if(this.bluetoothDevice)if(this.stopWatchingAdvertisements(),this.bluetoothDevice.gatt.connected)this.bluetoothDevice.gatt.disconnect();else{t="Bluetooth Device is already disconnected";this.onError(t)}else{var t="No Bluetooth Device";this.onError(t)}}setDeviceInformation(t){const e=new Uint8Array([1,t.lr,t.led_brightness,0,t.rec_auto_run,t.time01,t.time02,t.range.acc,t.range.gyro]);this.write("DEVICE_INFORMATION",e)}async setDataStreamingMode(t=4){const e=new Uint8Array([13,t]);await this.write("DEVICE_INFORMATION",e)}async syncCoreTime(t=3){let e,i=0,s=0,r=[];for(let i=0;i<t;i++)e=await this.getDateTime(),s+=e.round_trip_time,r.push(e.round_trip_time);i=s/t;const n=(new Date).getTime(),o=parseInt(n+Math.round(i/2));return e.date.setTime(o),await this.setDateTime(e.date),this.half_round_trip_time=Math.round(i/2),{sum_round_trip_time:s,average_round_trip_time:i,standard_time:n,adjusted_time:o,round_trip_times:r}}async setDateTime(t){const e=new Uint8Array(7);e[0]=t.getFullYear()-2e3,e[1]=t.getMonth()+1,e[2]=t.getDate(),e[3]=t.getHours(),e[4]=t.getMinutes(),e[5]=t.getSeconds(),e[6]=parseInt(t.getMilliseconds()/10);const i=new Uint8Array([e[0],e[1],e[2],e[3],e[4],e[5],e[6]]);await this.write("DATE_TIME",i)}clear(){this.bluetoothDevice=null,this.dataCharacteristic=null,this.onClear()}reset(){this.disconnect(),this.clear(),this.onReset()}onRead(t,e){let i=this.timestamp.getHz();if(i>0&&this.gotBLEFrequency(i),1!=this.isGotDataOverridden()){if("DEVICE_INFORMATION"==e);else if("SENSOR_VALUES"==e){let s,r=0,n=2e3,o=16;if(this.serial_number){const h=this.serial_number;this.serial_number=t.getUint16(1),this.serial_number-h!=1&&this.lostData(this.serial_number,h)}else this.serial_number=t.getUint16(1);if(104!=t.byteLength)return void console.warn("SENSOR VALUES: Data length is not 104");function a(t,e,i,s){const r=new Date;return r.setHours(t),r.setMinutes(e),r.setSeconds(i),r.setMilliseconds(s),r.getTime()}if(s=a(t.getUint8(3),t.getUint8(4),t.getUint8(5),t.getUint16(6)),n=2e3,o=16,r=s,50==t.getUint8(0))for(let c=3;c>=0;c--){3==c?s=r:s+=t.getUint8(28+21*c),this.quat={w:t.getInt16(8+21*c)/32768,x:t.getInt16(10+21*c)/32768,y:t.getInt16(12+21*c)/32768,z:t.getInt16(14+21*c)/32768,timestamp:s,serial_number:this.serial_number,packet_number:3-c},this.history_sensor_values.quat.push(this.quat),this.gyro={x:t.getInt16(16+21*c)/32768,y:t.getInt16(18+21*c)/32768,z:t.getInt16(20+21*c)/32768,timestamp:s,serial_number:this.serial_number,packet_number:3-c},this.history_sensor_values.gyro.push(this.gyro),this.acc={x:t.getInt16(22+21*c)/32768,y:t.getInt16(24+21*c)/32768,z:t.getInt16(26+21*c)/32768,timestamp:s,serial_number:this.serial_number,packet_number:3-c},this.history_sensor_values.acc.push(this.acc),this.converted_gyro={x:this.gyro.x*n,y:this.gyro.y*n,z:this.gyro.z*n,timestamp:s,serial_number:this.serial_number,packet_number:3-c},this.history_sensor_values.converted_gyro.push(this.converted_gyro),this.converted_acc={x:this.acc.x*o,y:this.acc.y*o,z:this.acc.z*o,timestamp:s,serial_number:this.serial_number,packet_number:3-c},this.history_sensor_values.converted_acc.push(this.converted_acc),this.gotAcc(this.acc),this.gotQuat(this.quat),this.gotGyro(this.gyro),this.gotConvertedAcc(this.converted_acc),this.gotConvertedGyro(this.converted_gyro);let l=new Quaternion(this.quat.w,this.quat.x,this.quat.y,this.quat.z);this.euler=l.toEuler(),this.gotEuler(this.euler)}else if(55==t.getUint8(0)){let g=24;for(let u=3;u>=0;u--)s=r,this.gyro={x:t.getInt16(8+g*u)/32768,y:t.getInt16(10+g*u)/32768,z:t.getInt16(12+g*u)/32768,timestamp:s,serial_number:this.serial_number,packet_number:3-u},this.history_sensor_values.gyro.push(this.gyro),this.acc={x:t.getInt16(14+g*u)/32768,y:t.getInt16(16+g*u)/32768,z:t.getInt16(18+g*u)/32768,timestamp:s,serial_number:this.serial_number,packet_number:3-u},this.history_sensor_values.acc.push(this.acc),this.press={values:[t.getUint16(20+g*u),t.getUint16(22+g*u),t.getUint16(24+g*u),t.getUint16(26+g*u),t.getUint16(28+g*u),t.getUint16(30+g*u)],timestamp:s,serial_number:this.serial_number,packet_number:3-u},this.history_sensor_values.press.push(this.press),this.converted_gyro={x:this.gyro.x*n,y:this.gyro.y*n,z:this.gyro.z*n,timestamp:s,serial_number:this.serial_number,packet_number:3-u},this.history_sensor_values.converted_gyro.push(this.converted_gyro),this.converted_acc={x:this.acc.x*o,y:this.acc.y*o,z:this.acc.z*o,timestamp:s,serial_number:this.serial_number,packet_number:3-u},this.history_sensor_values.converted_acc.push(this.converted_acc),this.gotAcc(this.acc),this.gotGyro(this.gyro),this.gotConvertedAcc(this.converted_acc),this.gotConvertedGyro(this.converted_gyro),this.gotPress(this.press)}else if(56==t.getUint8(0)){let _=32;for(let d=1;d>=0;d--){s=r,this.quat={w:t.getInt16(8+_*d)/32768,x:t.getInt16(10+_*d)/32768,y:t.getInt16(12+_*d)/32768,z:t.getInt16(14+_*d)/32768,timestamp:s,serial_number:this.serial_number,packet_number:1-d},this.history_sensor_values.quat.push(this.quat),this.gyro={x:t.getInt16(16+_*d)/32768,y:t.getInt16(18+_*d)/32768,z:t.getInt16(20+_*d)/32768,timestamp:s,serial_number:this.serial_number,packet_number:1-d},this.history_sensor_values.gyro.push(this.gyro),this.acc={x:t.getInt16(22+_*d)/32768,y:t.getInt16(24+_*d)/32768,z:t.getInt16(26+_*d)/32768,timestamp:s,serial_number:this.serial_number,packet_number:1-d},this.history_sensor_values.acc.push(this.acc),this.press={values:[t.getUint16(28+_*d),t.getUint16(30+_*d),t.getUint16(32+_*d),t.getUint16(34+_*d),t.getUint16(36+_*d),t.getUint16(38+_*d)],timestamp:s,serial_number:this.serial_number,packet_number:1-d},this.history_sensor_values.press.push(this.press),this.converted_gyro={x:this.gyro.x*n,y:this.gyro.y*n,z:this.gyro.z*n,timestamp:s,serial_number:this.serial_number,packet_number:1-d},this.history_sensor_values.converted_gyro.push(this.converted_gyro),this.converted_acc={x:this.acc.x*o,y:this.acc.y*o,z:this.acc.z*o,timestamp:s,serial_number:this.serial_number,packet_number:1-d},this.history_sensor_values.converted_acc.push(this.converted_acc),this.gotQuat(this.quat);let m=new Quaternion(this.quat.w,this.quat.x,this.quat.y,this.quat.z);this.euler=m.toEuler(),this.gotEuler(this.euler),this.gotAcc(this.acc),this.gotGyro(this.gyro),this.gotConvertedAcc(this.converted_acc),this.gotConvertedGyro(this.converted_gyro),this.gotPress(this.press)}}}}else if(this.gotData(t,e),"SENSOR_VALUES"==e&&(50==t.getUint8(0)||55==t.getUint8(0)||56==t.getUint8(0)))if(this.serial_number){const v=this.serial_number;this.serial_number=t.getUint16(1),this.serial_number-v!=1&&(this.interpolation.enabled,this.lostData(this.serial_number,v))}else this.serial_number=t.getUint16(1)}async getDateTime(){return new Promise((t,e)=>{const i=performance.now();this.read("DATE_TIME").then(e=>{const s=performance.now(),r=new Date(e.getUint8(0)+2e3,e.getUint8(1),e.getUint8(2),e.getUint8(3),e.getUint8(4),e.getUint8(5),10*e.getUint8(6)),n=s-i;this.date_time={date:r,data:e,round_trip_time:Math.floor(n)},t(this.date_time)}).catch(t=>{console.log("Error: "+t),this.onError(t),e(t)})})}async getDeviceInformation(){return new Promise((t,e)=>{this.read("DEVICE_INFORMATION").then(e=>{this.array_device_information.setUint8(0,1),this.array_device_information.setUint8(1,e.getUint8(1)),this.array_device_information.setUint8(2,e.getUint8(4)),this.array_device_information.setUint8(3,e.getUint8(5)),this.array_device_information.setUint8(4,e.getUint8(3)),this.array_device_information.setUint8(5,e.getUint8(6)),this.array_device_information.setUint8(6,e.getUint8(7)),this.array_device_information.setUint8(7,e.getUint8(8)),this.array_device_information.setUint8(8,e.getUint8(9));for(let t=9;t<=19;t++)this.array_device_information.setUint8(t,0);this.device_information={battery:e.getUint8(0),lr:e.getUint8(1),rec_mode:e.getUint8(2),rec_auto_run:e.getUint8(3),led_brightness:e.getUint8(4),range:{acc:e.getUint8(8),gyro:e.getUint8(9)},data:e},t(this.device_information)}).catch(t=>{console.log("Error: "+t),this.onError(t),e(t)})})}gotData(t){}gotStatus(t){}gotPress(t){}gotQuat(t){}gotGyro(t){}gotAcc(t){}gotConvertedGyro(t){}gotConvertedAcc(t){}gotDelta(t){}gotEuler(t){}gotGait(t){}gotType(t){}gotDirection(t){}gotCalorie(t){}gotDistance(t){}gotStandingPhaseDuration(t){}gotSwingPhaseDuration(t){}gotStride(t){}gotFootAngle(t){}gotPronation(t){}gotLandingImpact(t){}gotStepsNumber(t){}lostData(t,e){}onScan(t){console.log("onScan")}onConnectGATT(t){console.log("onConnectGATT")}onConnect(t){console.log("onConnect")}onWrite(t){console.log("onWrite")}onStartNotify(t){console.log("onStartNotify",t)}onStopNotify(t){console.log("onStopNotify",t)}onDisconnect(){console.log("onDisconnect")}onAdvertisement(t){console.log("onAdvertisement",t)}gotBLEFrequency(t){}onClear(){console.log("onClear")}onReset(){console.log("onReset")}onError(t){console.log("onError: ",t)}}